# Golang CI configuration for go-spacy
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis
  timeout: 5m

  # Exit code when at least one issue was found
  issues-exit-code: 1

  # Include test files
  tests: true

  # Skip generated files
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"

  # Skip directories
  skip-dirs:
    - vendor
    - node_modules
    - .git

# Output configuration
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  format: colored-line-number

  # Print lines of code with issue
  print-issued-lines: true

  # Print linter name in the end of issue text
  print-linter-name: true

  # Make issues output unique by line
  uniq-by-line: true

  # Add a prefix to the output file references
  path-prefix: ""

# Linters configuration
linters:
  # Disable all linters by default
  disable-all: true

  # Enable specific linters
  enable:
    # Default linters
    - errcheck      # Check for unchecked errors
    - gosimple      # Simplify code
    - govet         # Vet examines Go source code
    - ineffassign   # Detect ineffectual assignments
    - staticcheck   # Static analysis checks
    - typecheck     # Type checking
    - unused        # Check for unused code

    # Additional linters
    - asasalint     # Check for pass []any as any in variadic func
    - asciicheck    # Check for non-ASCII characters
    - bidichk       # Check for dangerous unicode character sequences
    - bodyclose     # Check whether HTTP response body is closed
    - contextcheck  # Check whether the function uses a non-inherited context
    - cyclop        # Check for cyclomatic complexity
    - dupl          # Check for duplicate code
    - durationcheck # Check for two durations multiplied together
    - errname       # Check error naming
    - errorlint     # Error wrapping issues
    - execinquery   # Check query string in Query function which reads data from DB
    - exhaustive    # Check exhaustiveness of enum switch statements
    - exportloopref # Check for pointers to enclosing loop variables
    - forbidigo     # Forbid identifiers
    - funlen        # Check function length
    - gci           # Control golang package import order
    - gochecknoglobals # Check that no global variables exist
    - gochecknoinits # Check that no init functions exist
    - gocognit      # Compute cognitive complexity
    - goconst       # Find repeated strings that could be constants
    - gocritic      # The most opinionated Go source code linter
    - gocyclo       # Compute cyclomatic complexity
    - godot         # Check if comments end in a period
    - gofmt         # Check whether code was gofmt-ed
    - gofumpt       # Check whether code was gofumpt-ed
    - goheader      # Check that file headers match the given regexp
    - goimports     # Check that imports are formatted
    - gomnd         # Detect magic numbers
    - gomoddirectives # Manage the use of 'replace', 'retract', and 'excludes' directives
    - gomodguard    # Allow and block lists linter for direct Go module dependencies
    - goprintffuncname # Check that printf-like functions are named with f at the end
    - gosec         # Inspect source code for security problems
    - lll           # Report long lines
    - loggercheck   # Check key value pairs for common logger libraries
    - makezero      # Find slice declarations with non-zero initial length
    - misspell      # Find commonly misspelled words
    - nakedret      # Check for naked returns in functions greater than specified length
    - nestif        # Report deeply nested if statements
    - nilerr        # Check for nil error
    - nilnil        # Check for nil nil
    - noctx         # Find sending http request without context.Context
    - nolintlint    # Check nolint directives
    - nonamedreturns # Report all named returns
    - nosprintfhostport # Check for misuse of Sprintf to construct URLs
    - predeclared   # Find code that shadows one of Go's predeclared identifiers
    - promlinter    # Check Prometheus metrics naming
    - reassign      # Check that package variables are not reassigned
    - revive        # Golint replacement
    - rowserrcheck  # Check whether Err of rows is checked successfully
    - sqlclosecheck # Check that sql.Rows and sql.Stmt are closed
    - stylecheck    # Replacement for golint
    - tenv          # Detect using os.Setenv instead of t.Setenv
    - testableexamples # Check if examples are testable
    - tparallel     # Detect inappropriate usage of t.Parallel() method
    - unconvert     # Remove unnecessary type conversions
    - unparam       # Report unused function parameters
    - usestdlibvars # Detect the possibility to use variables/constants from stdlib
    - wastedassign  # Find wasted assignment statements
    - whitespace    # Tool for detection of leading and trailing whitespace

# Linters settings
linters-settings:
  # Errcheck settings
  errcheck:
    # Check type assertions
    check-type-assertions: true
    # Check blank assignments
    check-blank: true
    # Exclude functions from checking
    exclude-functions:
      - (*os.File).Close
      - (*database/sql.DB).Close
      - (*database/sql.Rows).Close
      - (*database/sql.Stmt).Close

  # Exhaustive settings
  exhaustive:
    # Check switch statements are exhaustive
    check-generated: false
    default-signifies-exhaustive: true

  # Funlen settings
  funlen:
    lines: 80
    statements: 40

  # Gci settings
  gci:
    sections:
      - standard # Standard Go packages
      - default # Everything else
      - prefix(github.com/am-sokolov/go-spacy) # Our packages

  # Gocognit settings
  gocognit:
    min-complexity: 15

  # Goconst settings
  goconst:
    min-len: 2
    min-occurrences: 3
    ignore-tests: true

  # Gocritic settings
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint

  # Gocyclo settings
  gocyclo:
    min-complexity: 15

  # Godot settings
  godot:
    scope: declarations
    exclude:
      - "^fixme:"
      - "^todo:"
    capital: false

  # Gofumpt settings
  gofumpt:
    lang-version: "1.21"
    extra-rules: true

  # Goheader settings
  goheader:
    template-path: .golangci-header.txt
    values:
      const:
        YEAR: 2024
        COMPANY: "Go-Spacy Contributors"

  # Goimports settings
  goimports:
    local-prefixes: github.com/am-sokolov/go-spacy

  # Gomnd settings
  gomnd:
    ignored-numbers: [0, 1, 2, 8, 10, 16, 32, 64, 100, 128, 256, 300, 512, 1024, 4096]

  # Gosec settings
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104 # Unhandled errors (covered by errcheck)

  # Line length limit
  lll:
    line-length: 120

  # Misspell settings
  misspell:
    locale: US
    ignore-words:
      - "spacy"
      - "nlp"
      - "pos"
      - "lemma"
      - "lemmas"

  # Nakedret settings
  nakedret:
    max-func-lines: 30

  # Nestif settings
  nestif:
    min-complexity: 4

  # Nolintlint settings
  nolintlint:
    allow-unused: false
    require-explanation: false
    require-specific: false

  # Revive settings
  revive:
    severity: warning
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

  # Stylecheck settings
  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]

  # Tenv settings
  tenv:
    all: true

  # Unparam settings
  unparam:
    check-exported: false

# Issues configuration
issues:
  # Fix found issues (if possible)
  fix: false

  # List of regexps of issue texts to exclude
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "func name will be used as test\\.Test.* by other packages, and that stutters; consider calling this"
    - "should have a package comment"

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - gocognit
        - cyclop

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude godot for TODO/FIXME comments
    - linters:
        - godot
      source: "^\\s*// (TODO|FIXME|NOTE):"

    # Allow magic numbers in test files
    - path: _test\.go
      linters:
        - gomnd

    # Allow init functions in main packages
    - path: cmd/
      linters:
        - gochecknoinits

  # Independently of option `exclude` we use default exclude patterns
  exclude-use-default: false

  # If set to true exclude and exclude-rules regular expressions become case sensitive
  exclude-case-sensitive: false

  # The list of ids of default excludes to include or disable
  include:
    - EXC0002 # disable excluding of issues about comments from golint

  # Maximum issues count per one linter
  max-issues-per-linter: 0

  # Maximum count of issues with the same text
  max-same-issues: 0

  # Show only new issues
  new: false

  # Show only new issues created after git revision `REV`
  new-from-rev: ""

  # Show only new issues created in git patch with set file path
  new-from-patch: ""

severity:
  # Default value is empty string
  default-severity: error

  # The default value is false
  case-sensitive: false

  rules:
    - linters:
        - dupl
      severity: info